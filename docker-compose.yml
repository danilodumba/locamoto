version: '3.6'

services:
  ############################################## Postgree
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: locamoto
      POSTGRES_DB: locamoto
  ############################################## RabbitMQ
  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s -L http://localhost:15672 || exit 1"
        ]
      interval: 30s
      timeout: 20s
      retries: 5
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - log
  ############################################## MongoDB
  mongoDB:
    image: mongo
    ports:
        - 27017:27017
  ############################################## MinIO
  minio:
    image: minio/minio    
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3_data:/data
      - s3_config:/root/.minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: QezwmWmdCeSf6V583fV3
      MINIO_SECRET_KEY: 2VNtKZJxiwe8fH31iMFbrsttOrqgaKdePs0eWeAh
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: ABC123456

  ############################################ Elastic
  # elasticsearch:
  #   hostname: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - http.host=0.0.0.0
  #     - transport.host=127.0.0.1
  #     - network.host=0.0.0.0
  #     - cluster.name="elastic_stack_logging"
  #     - node.name="elastic_stack_logging_data"
  #     - discovery.zen.minimum_master_nodes=1
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin="*"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -I -s -L http://localhost:9200 || exit 1"
  #       ]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 5
  #   networks:
  #     - log
  
  # ################################################ Kibana
  # kibana:
  #   hostname: kibana
  #   image: docker.elastic.co/kibana/kibana:7.13.0
  #   environment:
  #     - server.name=kibana
  #     - server.host="0"
  #     - elasticsearch.url=http://elasticsearch:9200
  #   ports:
  #     - "5601:5601"
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -I -s -L http://localhost:5601/ || exit 1"
  #       ]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 5
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   networks:
  #     - log
  # ############################################# LogStash
  # logstash:
  #   image: logstash
  #   build:
  #     context: ./logstash
  #   command: logstash -f /config/logstash.conf
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - log

volumes:  
  s3_data:
  s3_config:
  postgres: 
  elasticsearch_data:

networks:
  log:
    driver: bridge