// <auto-generated />
using System;
using System.Collections.Generic;
using Locamoto.Infra.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Locamoto.Infra.PostgreSql.Migrations
{
    [DbContext(typeof(LocamotoEFContext))]
    partial class LocamotoEFContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("locamoto")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Locamoto.Domain.Entities.CostPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("AdditionalCostPerDay")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CostPerDay")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("EndDay")
                        .HasColumnType("integer");

                    b.Property<decimal>("PercentageFine")
                        .HasColumnType("numeric");

                    b.Property<int>("StartDay")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CostPlan", "locamoto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0174e5b-b8de-4b83-a30b-af958cb508ce"),
                            AdditionalCostPerDay = 50m,
                            CostPerDay = 30m,
                            Description = "Seven Days Plan",
                            EndDay = 7,
                            PercentageFine = 20m,
                            StartDay = 7
                        },
                        new
                        {
                            Id = new Guid("9d1e5149-cc43-440c-9f0f-93b9b80b37b8"),
                            AdditionalCostPerDay = 50m,
                            CostPerDay = 28m,
                            Description = "Fifteen Days Plan",
                            EndDay = 15,
                            PercentageFine = 40m,
                            StartDay = 15
                        },
                        new
                        {
                            Id = new Guid("a424ebe5-4e62-4ead-b70a-875f3eaad7fb"),
                            AdditionalCostPerDay = 50m,
                            CostPerDay = 22m,
                            Description = "Thirty Days Plan",
                            EndDay = 30,
                            PercentageFine = 60m,
                            StartDay = 30
                        });
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Deliveryman", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.ComplexProperty<Dictionary<string, object>>("Cnh", "Locamoto.Domain.Entities.Deliveryman.Cnh#CnhCard", b1 =>
                        {
                            b1.Property<string>("Image")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CnhImage");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CnhNumber");

                            b1.Property<int>("Type")
                                .HasColumnType("integer")
                                .HasColumnName("CnhTipe");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Cnpj", "Locamoto.Domain.Entities.Deliveryman.Cnpj#CNPJ", b1 =>
                        {
                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Cnpj");
                        });

                    b.HasKey("Id");

                    b.ToTable("Deliveryman", "locamoto");
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Motorcycle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Motorcycle", "locamoto");
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Cost")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("DeliverymanID")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeliverymanID");

                    b.ToTable("Order", "locamoto");
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Rent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<Guid>("DeliverymanID")
                        .HasColumnType("uuid");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExpectedCost")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("ExpectedEndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("FineCost")
                        .HasColumnType("numeric");

                    b.Property<Guid>("MotorcycleID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PlanID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("RealCost")
                        .HasColumnType("numeric");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeliverymanID");

                    b.HasIndex("MotorcycleID");

                    b.HasIndex("PlanID");

                    b.ToTable("Rent", "locamoto");
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Order", b =>
                {
                    b.HasOne("Locamoto.Domain.Entities.Deliveryman", "Deliveryman")
                        .WithMany()
                        .HasForeignKey("DeliverymanID");

                    b.Navigation("Deliveryman");
                });

            modelBuilder.Entity("Locamoto.Domain.Entities.Rent", b =>
                {
                    b.HasOne("Locamoto.Domain.Entities.Deliveryman", "Deliveryman")
                        .WithMany()
                        .HasForeignKey("DeliverymanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Locamoto.Domain.Entities.Motorcycle", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Locamoto.Domain.Entities.CostPlan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deliveryman");

                    b.Navigation("Motorcycle");

                    b.Navigation("Plan");
                });
#pragma warning restore 612, 618
        }
    }
}
